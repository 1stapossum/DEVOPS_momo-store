include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - build
  - test
  - release

build-frontend:
  stage: build
  script:
  - cd frontend
  - npm install
  - npm run build
  #- cd ..
  - mkdir momo-store-frontend-${VERSION}
  - mv dist momo-store-frontend-${VERSION}/public_html
  - ls -al momo-store-frontend-${VERSION}/public_html
   #- touch sausage-store-${VERSION}/public_html/test3.txt # Тест роллбэка. Работает. Роллбэк всмысле.
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/frontend/momo-store-frontend-${VERSION}/public_html

sonarq-frontend-check:
  stage: test
  dependencies:
    - build-frontend
  image:
    name: sonarsource/sonar-scanner-cli:4.7
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  script:
    - cd frontend
    - sonar-scanner
      -Dsonar.projectKey=02_alexander_volokhov_frontend_momo
      -Dsonar.projectName=02_alexander_volokhov_frontend_momo
      -Dsonar.host.url=$SONAR_HOST_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.qualitygate.wait=true
  
nexus:
  stage: release
  script:
    - tar czvf momo-frontend-${VERSION}.tar.gz ${CI_PROJECT_DIR}/frontend/momo-store-frontend-${VERSION}/public_html
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file momo-frontend-${VERSION}.tar.gz ${NEXUS_REPO_URL}/momo-alexander_volokhov_frontend/${VERSION}/momo-frontend-${VERSION}.tar.gz
    - curl -v -u "${MY_NEXUS_REPO_USER}:${MY_NEXUS_REPO_PASS}" --upload-file momo-frontend-${VERSION}.tar.gz  ${MY_NEXUS_REPO_URL}/my_momo_frontend/${VERSION}/momo-frontend-${VERSION}.tar.gz
    
