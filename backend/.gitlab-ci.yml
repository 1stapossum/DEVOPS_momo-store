include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
- test-before
- build
- test

some-test-from-template:
  stage: test-before
  image: golang:latest
  script:
    - cd backend
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

build-backend:
  stage: build
  image: golang:latest
  script:
   - cd backend
   - mkdir app
   - go build -o app ./...
   - ls -al app 
   - mkdir momo-store-${VERSION}
   - ls -al momo-store-${VERSION}
   - mv app/api momo-store-${VERSION}/api-${VERSION}
   - ls -al momo-store-${VERSION}
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/backend/momo-store-${VERSION}/api-${VERSION}

sonarq-backend-check:
  stage: test
  dependencies:
    - build-backend
  image: sonarsource/sonar-scanner-cli
  variables:
    SONAR_TOKEN: "${SONAR_TOKEN}"
    SONAR_HOST_URL: "${SONAR_HOST_URL}"
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  script:
    - cd backend
    - sonar-scanner -Dversion.application=${VERSION} -Dsonar.qualitygate.wait=true -Dsonar.projectKey=02_alexander_volokhov_backend_momo -Dsonar.projectName=02_alexander_volokhov_backend_momo
  allow_failure: true